<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.disposable.management.dao.managementDao">
	<insert id="foodMainInsert" parameterType="java.util.Map">
			INSERT INTO FOOD (FOODNUM,STORENUM,FOODNAME,PRICE,WAITTIME,FOODPHOTO,FOOTTEXT,CLASSIFY,SALEPERCENT,SALEDATE)
			VALUES (FOOD_SEQ.NEXTVAL,#{storeNum},#{foodName},#{foodPrice},#{waitTime},'',#{foodtext},#{classify},#{salepercent}, to_date(replace(#{saledate},'/','-'),'YYYY-MM-DD HH24:MI:SS'))
	</insert>
	<insert id="foodOptionInsert" parameterType="java.util.Map">
			 INSERT INTO FOODOPTION (FOODNUM,STORENUM,OPTIONNUM,OPTIONGROUP,OPTIONPRICE,CHECKFLAG,OPTIONGRNAME,OPTIONNAME)
			VALUES (
			<if test="foodnum != ''  and foodnum != null">
				#{foodnum},
			</if>
			<if test="foodnum == ''  or foodnum == null">
				FOOD_SEQ.CURRVAL,
			</if>
			#{storeNum},#{optionNum},#{optionGroupNum},#{optionPrice},#{multiple},#{optionGroupName},#{optionName})
	</insert>
	<insert id="foodImageInsert" parameterType="java.util.Map" >
			 INSERT INTO IMAGEBOX (IMGNUM,BOARDNUM,IMGNAME,CLASSIFY)
			VALUES (IMAGEBOX_SEQ.NEXTVAL,
			<if test="foodnum != ''  and foodnum != null">
				#{foodnum},
			</if>
			<if test="foodnum == ''  or foodnum == null">
				FOOD_SEQ.CURRVAL,
			</if>
			#{fileName},'SHOP')
	</insert>
	<select id="storeFoodListGet" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT MT.*,
		(SELECT COUNT(*)
			FROM SHOP SP
			INNER JOIN FOOD FD
			ON SP.STORENUM = FD.STORENUM
			LEFT JOIN (SELECT IMGNAME,BOARDNUM FROM IMAGEBOX WHERE CLASSIFY='SHOP' AND 1 >= ROWNUM) IB
			ON FD.FOODNUM = IB.BOARDNUM
			WHERE SP.STORENUM = #{storenum}) as TOTALCNT
			 FROM
			(
			SELECT FD.*,
			IB.IMGNAME,
			ROWNUM as RM
			FROM SHOP SP
			INNER JOIN (SELECT * FROM FOOD ORDER BY FOODNUM DESC) FD
			ON SP.STORENUM = FD.STORENUM
			LEFT JOIN (
			SELECT B.* FROM
			(SELECT ROW_NUMBER() OVER(PARTITION BY A.BOARDNUM ORDER BY A.IMGNAME,A.BOARDNUM) AS ROW_NUM,A.* 
			FROM IMAGEBOX A WHERE A.CLASSIFY='SHOP') B
			 WHERE B.ROW_NUM = 1
			 ) IB
			ON FD.FOODNUM = IB.BOARDNUM
			WHERE SP.STORENUM = #{storenum}
			) MT
			WHERE
			MT.RM > #{startpagenum}  AND  #{endpagenum} >= MT.RM
			
	</select>
	<select id="storeOrderList" parameterType="java.util.Map"  resultType="java.util.Map">
			SELECT 
					OFD.ORDERNUM
					,OFD.STORENUM
					,OFD.FOODNUM
					,OFD.ALLPRICE
					,OFD.EMAIL
					,OFD.ORDERCODE
					,OFD.OPTIONS
					,OFD.STATES
					,OFD.MEMO
					,FD.FOODNAME
					,to_char(OFD.ORDERDATE, 'yyyy-mm-dd hh:mi:ss') AS ORDERDATE

				FROM ORDERFOOD OFD
				INNER JOIN (SELECT * FROM FOOD WHERE STORENUM =#{storenum}) FD
				ON OFD.FOODNUM = FD.FOODNUM
				INNER JOIN MEMBERS MBS
				ON OFD.EMAIL = MBS.EMAIL
				WHERE OFD.STORENUM = #{storenum}
				<if test="state != ''  and state != null">
				AND STATES = #{state}
				</if>
				<if test="startDate != ''  and startDate != null">
				AND ORDERDATE >  to_date(replace( #{startDate},'/','-'),'YYYY-MM-DD HH24:MI:SS')
				</if>
				<if test="endDate != ''  and endDate != null">
				AND  to_date(replace( #{endDate},'/','-'),'YYYY-MM-DD HH24:MI:SS') > ORDERDATE
				</if>
	</select>
	<update id="updateOrder" parameterType="java.util.Map">
			UPDATE ORDERFOOD 
			SET STATES = #{state}
			WHERE ORDERCODE = #{ordercode}
	</update>
	<select id="shopInfo" parameterType="String"  resultType="java.util.Map">
		SELECT * FROM SHOP WHERE STORENUM = #{storenum}
	</select>
	
		<update id="shopInfoUpdate" parameterType="java.util.Map">
			UPDATE SHOP 
			SET ADDRESS = #{ADDRESS}
			,NOTICE = #{notice}
			,PHONE = #{phone}
			,CLASSIFY = #{classify}
			,LATITUDE = #{LATITUDE}
			,LONGITUDE = #{LONGITUDE}
			WHERE STORENUM = #{storenum}
	</update>
	
	<select id="foodInfo" parameterType="java.util.Map"  resultType="java.util.Map">
		SELECT 
		FD.FOODNUM
		,FD.FOODNAME
		,FD.PRICE
		,FD.SALEPERCENT
		,TO_CHAR(FD.SALEDATE, 'YYYY-MM-DD HH24:MI:SS') AS SALEDATE
		,FD.WAITTIME
		,FD.CLASSIFY
		,FD.FOOTTEXT
		,FOP.OPTIONGROUP
		,FOP.OPTIONGRNAME
		,FOP.OPTIONNUM
		,FOP.OPTIONNAME
		,FOP.OPTIONPRICE
		FROM FOOD FD
		INNER JOIN FOODOPTION FOP
		ON FD.STORENUM = FOP.STORENUM
		AND FD.FOODNUM = FOP.FOODNUM
		WHERE FD.STORENUM = #{storenum} AND FD.FOODNUM = #{foodnum}
		ORDER BY FOP.OPTIONGROUP, FOP.OPTIONNUM
	</select>
	<update id="foodMainUpdate" parameterType="java.util.Map">
			UPDATE FOOD
			SET 
			FOODNAME = #{foodName}
			,PRICE = #{foodPrice}
			,WAITTIME = #{waitTime}
			,FOOTTEXT = #{foodtext}
			,CLASSIFY = #{classify}
			,SALEPERCENT = #{salepercent}
			,SALEDATE = to_date(replace(#{saledate},'/','-'),'YYYY-MM-DD HH24:MI:SS')
			WHERE FOODNUM = #{foodnum} AND STORENUM = #{storeNum}
	</update>
	<delete id="foodOptiondelete" parameterType="java.util.Map">
		DELETE FROM FOODOPTION WHERE FOODNUM = #{foodnum} AND  STORENUM = #{storeNum}
	</delete>
	<delete id="foodImageDelete" parameterType="java.util.Map">
		DELETE FROM IMAGEBOX WHERE BOARDNUM = #{foodnum} AND  CLASSIFY = 'SHOP'
	</delete>	
	
	<select id="shopSalesInfo" parameterType="java.util.Map"  resultType="java.util.Map">	
	SELECT  
	TO_CHAR(ORDERDATE, 'YYYY/MM/DD') AS ORDERDATE  
	, SUM(ALLPRICE) AS TOTAL , 
	COUNT(*) AS ORDERCOUNT
	FROM ORDERFOOD 
	WHERE STORENUM=#{storeNum}
	GROUP BY TO_CHAR(ORDERDATE, 'YYYY/MM/DD')
	ORDER BY ORDERDATE
	</select>
</mapper>
